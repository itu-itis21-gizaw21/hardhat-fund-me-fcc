{
  "address": "0x7fD52805293e996c98D1A77FFF5ffc969c939d76",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricedFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc9912c907a7c7e4501055f659fcf9cdb70cf11e5926da44e0d29540bb22022f3",
  "receipt": {
    "to": null,
    "from": "0xe24E50e2dC84ebF72521573cb99f29081eED419d",
    "contractAddress": "0x7fD52805293e996c98D1A77FFF5ffc969c939d76",
    "transactionIndex": 75,
    "gasUsed": "999133",
    "logsBloom": "0x
    "blockHash": "0xbc9b97d91fdac0784bd353c9751efc98fe18e9a697ff13a99f8f685c3f78a3f8",
    "transactionHash": "0xc9912c907a7c7e4501055f659fcf9cdb70cf11e5926da44e0d29540bb22022f3",
    "logs": [],
    "blockNumber": 4048678,
    "cumulativeGasUsed": "24856783",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "b092435fc55c50a1542c6385175e4ffb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricedFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kaleab A\",\"details\":\"This implements the price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n    @author Kaleab A\\n    @notice This contract is to demo a sample funding contract\\n    @dev This implements the price feeds as our library\\n */\\n\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;  \\n\\n    // State Variables\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n\\n    uint256 private constant MINIMUM_USD = 10 * 1e18;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    modifier onlyOwner{\\n        if(msg.sender != i_owner){\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable{\\n        //console.log(msg.value.getConversionRate(priceFeed));\\n        require(msg.value.getConversionRate(priceFeed) == MINIMUM_USD,\\\"Didn't send enough\\\");\\n       // require(1==2,\\\"are you for real\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n\\n    function withdraw() public onlyOwner{\\n        for(uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess,\\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"Send failed\\\");\\n    }\\n   function cheaperWithdraw() public payable onlyOwner() {\\n        address[] memory fundersx = funders;\\n        for(uint256 funderIndex = 0; funderIndex < fundersx.length; funderIndex++){\\n            address funder = fundersx[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess,\\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"Send failed\\\");\\n   }\\n\\n    function getOwner() public view returns (address){\\n        return i_owner;\\n    }\\n    function getFunder(uint256 index) public view returns(address){\\n        return funders[index];\\n    }\\n    function getAddressToAmountFunded(address funder) public view returns (uint256){\\n        return addressToAmountFunded[funder];\\n    }\\n    function getPricedFeed() public view returns (AggregatorV3Interface){\\n        return priceFeed;\\n    }\\n\\n}\",\"keccak256\":\"0x9ebd5457e249e537c9e2dd598f0bd7fca413afc1a330dd08ed200be34898dd44\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n  \\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n   //  AggregatorV3Interface();\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x9d7df01eb557e664640aab1cd4fdcdf65792a59f8815b05df770153dfbeddd3d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200123338038062001233833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110b46200017f600039600081816101ba015281816103fc015261054801526110b46000f3fe6080604052600436106100705760003560e01c8063b60d42881161004e578063b60d4288146100f4578063be2693f0146100fe578063d1acaace14610108578063d7b4750c1461013357610070565b80630343fb25146100755780633ccfd60b146100b2578063893d20e8146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610a42565b610170565b6040516100a99190610a88565b60405180910390f35b3480156100be57600080fd5b506100c76101b8565b005b3480156100d557600080fd5b506100de6103f8565b6040516100eb9190610ab2565b60405180910390f35b6100fc610420565b005b610106610546565b005b34801561011457600080fd5b5061011d6107ea565b60405161012a9190610b2c565b60405180910390f35b34801561013f57600080fd5b5061015a60048036038101906101559190610b73565b610814565b6040516101679190610ab2565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e85760006001828154811061026357610262610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102e090610bfe565b915050610240565b50600067ffffffffffffffff81111561030457610303610c47565b5b6040519080825280602002602001820160405280156103325781602001602082028036833780820191505090505b5060019080519060200190610348929190610938565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036f90610ca7565b60006040518083038185875af1925050503d80600081146103ac576040519150601f19603f3d011682016040523d82523d6000602084013e6103b1565b606091505b50509050806103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610d19565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b678ac7230489e8000061045e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085c90919063ffffffff16565b1461049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610d85565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561064f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610605575b5050505050905060005b81518110156106d957600082828151811061067757610676610ba0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106d190610bfe565b915050610659565b50600067ffffffffffffffff8111156106f5576106f4610c47565b5b6040519080825280602002602001820160405280156107235781602001602082028036833780820191505090505b5060019080519060200190610739929190610938565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161076090610ca7565b60006040518083038185875af1925050503d806000811461079d576040519150601f19603f3d011682016040523d82523d6000602084013e6107a2565b606091505b50509050806107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd90610d19565b60405180910390fd5b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061082a57610829610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061086883610898565b90506000670de0b6b3a764000085836108819190610da5565b61088b9190610e2e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108e157600080fd5b505afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190610eec565b5050509150506402540be400816109309190610f67565b915050919050565b8280548282559060005260206000209081019282156109b1579160200282015b828111156109b05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610958565b5b5090506109be91906109c2565b5090565b5b808211156109db5760008160009055506001016109c3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0f826109e4565b9050919050565b610a1f81610a04565b8114610a2a57600080fd5b50565b600081359050610a3c81610a16565b92915050565b600060208284031215610a5857610a576109df565b5b6000610a6684828501610a2d565b91505092915050565b6000819050919050565b610a8281610a6f565b82525050565b6000602082019050610a9d6000830184610a79565b92915050565b610aac81610a04565b82525050565b6000602082019050610ac76000830184610aa3565b92915050565b6000819050919050565b6000610af2610aed610ae8846109e4565b610acd565b6109e4565b9050919050565b6000610b0482610ad7565b9050919050565b6000610b1682610af9565b9050919050565b610b2681610b0b565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b610b5081610a6f565b8114610b5b57600080fd5b50565b600081359050610b6d81610b47565b92915050565b600060208284031215610b8957610b886109df565b5b6000610b9784828501610b5e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0982610a6f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3c57610c3b610bcf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c91600083610c76565b9150610c9c82610c81565b600082019050919050565b6000610cb282610c84565b9150819050919050565b600082825260208201905092915050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d03600b83610cbc565b9150610d0e82610ccd565b602082019050919050565b60006020820190508181036000830152610d3281610cf6565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610d6f601283610cbc565b9150610d7a82610d39565b602082019050919050565b60006020820190508181036000830152610d9e81610d62565b9050919050565b6000610db082610a6f565b9150610dbb83610a6f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df457610df3610bcf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3982610a6f565b9150610e4483610a6f565b925082610e5457610e53610dff565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7e81610e5f565b8114610e8957600080fd5b50565b600081519050610e9b81610e75565b92915050565b6000819050919050565b610eb481610ea1565b8114610ebf57600080fd5b50565b600081519050610ed181610eab565b92915050565b600081519050610ee681610b47565b92915050565b600080600080600060a08688031215610f0857610f076109df565b5b6000610f1688828901610e8c565b9550506020610f2788828901610ec2565b9450506040610f3888828901610ed7565b9350506060610f4988828901610ed7565b9250506080610f5a88828901610e8c565b9150509295509295909350565b6000610f7282610ea1565b9150610f7d83610ea1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fbc57610fbb610bcf565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ff957610ff8610bcf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103657611035610bcf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107357611072610bcf565b5b82820290509291505056fea26469706673582212207f1fb9eda966b43bc5e46ff0e8c60d0eeb3e89fa0f0a0603d4315a52ba8b45c264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063b60d42881161004e578063b60d4288146100f4578063be2693f0146100fe578063d1acaace14610108578063d7b4750c1461013357610070565b80630343fb25146100755780633ccfd60b146100b2578063893d20e8146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610a42565b610170565b6040516100a99190610a88565b60405180910390f35b3480156100be57600080fd5b506100c76101b8565b005b3480156100d557600080fd5b506100de6103f8565b6040516100eb9190610ab2565b60405180910390f35b6100fc610420565b005b610106610546565b005b34801561011457600080fd5b5061011d6107ea565b60405161012a9190610b2c565b60405180910390f35b34801561013f57600080fd5b5061015a60048036038101906101559190610b73565b610814565b6040516101679190610ab2565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e85760006001828154811061026357610262610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102e090610bfe565b915050610240565b50600067ffffffffffffffff81111561030457610303610c47565b5b6040519080825280602002602001820160405280156103325781602001602082028036833780820191505090505b5060019080519060200190610348929190610938565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036f90610ca7565b60006040518083038185875af1925050503d80600081146103ac576040519150601f19603f3d011682016040523d82523d6000602084013e6103b1565b606091505b50509050806103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610d19565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b678ac7230489e8000061045e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085c90919063ffffffff16565b1461049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610d85565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561064f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610605575b5050505050905060005b81518110156106d957600082828151811061067757610676610ba0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106d190610bfe565b915050610659565b50600067ffffffffffffffff8111156106f5576106f4610c47565b5b6040519080825280602002602001820160405280156107235781602001602082028036833780820191505090505b5060019080519060200190610739929190610938565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161076090610ca7565b60006040518083038185875af1925050503d806000811461079d576040519150601f19603f3d011682016040523d82523d6000602084013e6107a2565b606091505b50509050806107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd90610d19565b60405180910390fd5b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061082a57610829610ba0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061086883610898565b90506000670de0b6b3a764000085836108819190610da5565b61088b9190610e2e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108e157600080fd5b505afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190610eec565b5050509150506402540be400816109309190610f67565b915050919050565b8280548282559060005260206000209081019282156109b1579160200282015b828111156109b05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610958565b5b5090506109be91906109c2565b5090565b5b808211156109db5760008160009055506001016109c3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0f826109e4565b9050919050565b610a1f81610a04565b8114610a2a57600080fd5b50565b600081359050610a3c81610a16565b92915050565b600060208284031215610a5857610a576109df565b5b6000610a6684828501610a2d565b91505092915050565b6000819050919050565b610a8281610a6f565b82525050565b6000602082019050610a9d6000830184610a79565b92915050565b610aac81610a04565b82525050565b6000602082019050610ac76000830184610aa3565b92915050565b6000819050919050565b6000610af2610aed610ae8846109e4565b610acd565b6109e4565b9050919050565b6000610b0482610ad7565b9050919050565b6000610b1682610af9565b9050919050565b610b2681610b0b565b82525050565b6000602082019050610b416000830184610b1d565b92915050565b610b5081610a6f565b8114610b5b57600080fd5b50565b600081359050610b6d81610b47565b92915050565b600060208284031215610b8957610b886109df565b5b6000610b9784828501610b5e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0982610a6f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3c57610c3b610bcf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c91600083610c76565b9150610c9c82610c81565b600082019050919050565b6000610cb282610c84565b9150819050919050565b600082825260208201905092915050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d03600b83610cbc565b9150610d0e82610ccd565b602082019050919050565b60006020820190508181036000830152610d3281610cf6565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610d6f601283610cbc565b9150610d7a82610d39565b602082019050919050565b60006020820190508181036000830152610d9e81610d62565b9050919050565b6000610db082610a6f565b9150610dbb83610a6f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610df457610df3610bcf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3982610a6f565b9150610e4483610a6f565b925082610e5457610e53610dff565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7e81610e5f565b8114610e8957600080fd5b50565b600081519050610e9b81610e75565b92915050565b6000819050919050565b610eb481610ea1565b8114610ebf57600080fd5b50565b600081519050610ed181610eab565b92915050565b600081519050610ee681610b47565b92915050565b600080600080600060a08688031215610f0857610f076109df565b5b6000610f1688828901610e8c565b9550506020610f2788828901610ec2565b9450506040610f3888828901610ed7565b9350506060610f4988828901610ed7565b9250506080610f5a88828901610e8c565b9150509295509295909350565b6000610f7282610ea1565b9150610f7d83610ea1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fbc57610fbb610bcf565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ff957610ff8610bcf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561103657611035610bcf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561107357611072610bcf565b5b82820290509291505056fea26469706673582212207f1fb9eda966b43bc5e46ff0e8c60d0eeb3e89fa0f0a0603d4315a52ba8b45c264736f6c63430008080033",
  "devdoc": {
    "author": "Kaleab A",
    "details": "This implements the price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}